/*--------------------------------*- C++ -*----------------------------------*\
  =========                 |
  \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox
   \\    /   O peration     | Website:  https://openfoam.org
    \\  /    A nd           | Version:  dev
     \\/     M anipulation  |
-------------------------------------------------------------------------------
Description
    Calculates lift, drag and moment coefficients by summing forces on
    specified patches for a case where the solver is incompressible (pressure
    is kinematic, e.g. m^2/s^2).

\*---------------------------------------------------------------------------*/

forceCoeffs
{
    // Mandatory entries
    type            forceCoeffs;
    libs            ("libforces.so");
    patches         (airfoil-l1 airfoil-l2 airfoil-h1 airfoil-h2);


    // Optional entries

    // Field names
    p               p;
    U               U;
    rho     rhoInf;
    log         true;
    rhoInf      1;  //for compressible cases 	
    // Reference pressure [Pa]
    pRef            0;

    // Include porosity effects?
    porosity        false;

    // Store and write volume field representations of forces and moments
    writeFields     yes;

    // Centre of rotation for moment calculations
    CofR            (0.25 0 0);

    // Lift direction
    liftDir         (0 1 0);	//0deg
    //liftDir         (-0.173648 0.984808 0);	//10deg
    //liftDir         (-0.258819 0.965926 0);	//15deg
    // Drag direction
    dragDir         (1 0 0);	//0deg
    //dragDir         (0.984808 0.173648 0);	//10deg
    //dragDir         (0.965926 0.258819 0);	//15deg
    // Pitch axis
    pitchAxis       (0 0 1);

    // Freestream velocity magnitude [m/s]
    magUInf         51.4815;

    // Reference length [m]z
    lRef            1;

    // Reference area [m2] . xte*length_z 
    Aref            0.01;

    // Spatial data binning
    // - extents given by the bounds of the input geometry
    binData
    {
        nBin        31;
        direction   (1 0 0);
        cumulative  yes;
    }
}
